{% extends 'FriendScoreWebBundle::layout.html.twig' %}

{% block body %}

<!--
<h2>Recent visits</h2>
-->

<ul class="items">
    {% for visit in visits %}
        <li>
            <a
                href="{{ url('friendscore_web_default_place', {'id': visit.place_id}) }}"
                title="{{ visit.first_name }} checked in to {{ visit.place_name }}">
                {{ visit.first_name }}
                checked in to
                {{ visit.place_name }}
                <br />
                <small>{{ visit.last_checkin|date("F jS \\a\\t H:i") }}</small>
            </a>
        </li>
    {% else %}
        <li>
            <a href="{{ url('friendscore_web_user_index') }}"><small>No Check-Ins yet. Connect with <br/>Facebook or Foursquare.</small></a>
        </li>
    {% endfor %}
</ul>

<!--
<h2>Recommended places</h2>

<ul>
    {% for place in places %}
        <li><a href="{{ place.url }}">{{ place.name }}</a></li>
    {% endfor %}
</ul>
-->

{% endblock %}


{% block javascripts %}
<script>

var geoJson = {
    type: 'FeatureCollection',
    features: []
};

{% for place in places %}
{% if place.location is defined %}
geoJson.features.push({
    // this feature is in the GeoJSON format: see geojson.org
    // for the full specification
    type: 'Feature',
    geometry: {
        type: 'Point',
        // coordinates here are in longitude, latitude order because
        // x, y is the standard for GeoJSON and many formats
        coordinates: [{{ place.location.lon }}, {{ place.location.lat }}]
    },
    properties: {
        title: '{{ place.name }}',
        url: '{{ url('friendscore_web_default_place', {'id': place.id}) }}',
        //description: '<a href="{{ url('friendscore_web_default_place', {'id': place.id}) }}">Details</a>',
        // one can customize markers by adding simplestyle properties
        // http://mapbox.com/developers/simplestyle/
        'marker-color': '#E67E22'
    }
});
{% endif %}
{% endfor %}

map.markerLayer.on('layeradd', function(e) {

    var marker = e.layer,
        feature = marker.feature;

    // Create custom popup content
    var popupContent =  '<div class="marker-title"><a href="' + feature.properties.url + '">' + feature.properties.title + '</a></div>';

    // http://leafletjs.com/reference.html#popup
    marker.bindPopup(popupContent,{
        closeButton: false,
        minWidth: 60
    });
});

map.markerLayer.setGeoJSON(geoJson);

// This uses the HTML5 geolocation API, which is available on
// most mobile browsers and modern browsers, but not in Internet Explorer
//
// See this chart of compatibility for details:
// http://caniuse.com/#feat=geolocation
if (navigator.geolocation) {
    map.locate();
}

// Once we've got a position, zoom and center the map
// on it, and add a single marker.
map.on('locationfound', function(e) {
    map.setView(e.latlng, 16);
});

</script>
{% endblock %}
